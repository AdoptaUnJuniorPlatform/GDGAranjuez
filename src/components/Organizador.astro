---
// Props que recibe la card Organizador
const { nombre, cargo, foto, redes} = Astro.props;

// Estilos por defecto
const {
  sombra = 'shadow-md hover:shadow-xl',
  // destructuring en una línea, usa ?? (nullish coalescing) para que si estilos es undefined o null, lo reemplace por {} automáticamente.
} = Astro.props.estilos ?? {};
---

<!-- Componente Card visual, individual para cada persona -->
<div
  class={`bg-blue-950
  rounded-xl p-5 text-center transition-all duration-300 hover:-translate-y-1 ${sombra} max-w-3xs w-full`}
>
  {/* Foto del organizador, redondeada y centrada */}
  <img
    src={foto}
    alt={nombre}
    class="w-24 h-24 mx-auto rounded-full mb-4 object-cover transition-all duration-300 hover:scale-105"
  />

  <h3 class="text-lg text-violet-50 font-semibold">{nombre}</h3>

  {
    /* La clase whitespace-pre-line de Tailwind le dice al navegador que 
	  los saltos de línea \n se deben interpretar como saltos reales (<br />) */
  }
  <p class={`mb-2 dark:text-gray-900 whitespace-pre-line`}>{cargo}</p>
  {
  }
  <div class="flex justify-center space-x-4 mt-2">
    {
      redes?.twitter && (
        <a
          href={redes.twitter}
          target="_blank"
          rel="noopener noreferrer"
          aria-label={`Twitter de ${nombre}`}
          class="transform transition-transform duration-200 hover:scale-125"
        >
          <img
            src="/icons/twitter-black.png"
            alt="Twitter"
            class="w-5 h-5"
          />
        </a>
      )
    }
    {
      redes?.linkedin && (
        <a
          href={redes.linkedin}
          target="_blank"
          rel="noopener noreferrer"
          aria-label={`LinkedIn de ${nombre}`}
          class="transform transition-transform duration-200 hover:scale-125"
        >
          <img src="/icons/linkedin.png" alt="LinkedIn" class="w-5 h-5" />
        </a>
      )
    }
  </div>
</div>
